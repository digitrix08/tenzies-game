{"version":3,"sources":["components/Die.js","components/Confetti.js","App.js","index.js"],"names":["Die","props","styles","backgroundColor","isHeld","className","value","style","onClick","holdDice","Array","fill","useWindowSize","width","height","App","React","useState","allNewDice","dice","setDice","tenzies","setTenzies","rolls","setRolls","generateNewDie","Math","ceil","random","id","nanoid","newDice","i","push","useEffect","allHeld","every","die","firstValue","allSameValue","diceElements","map","oldDice","Confetti","prevRoll","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAGe,SAASA,EAAIC,GACxB,IAAMC,EAAS,CACXC,gBAAiBF,EAAMG,OAAS,UAAY,SAEhD,OACI,qBAAKC,UAAS,wBAAmBJ,EAAMK,OAASC,MAAOL,EAAQM,QAASP,EAAMQ,SAA9E,SACKC,MAAMT,EAAMK,OAAOK,KAAK,sBAAMN,UAAU,W,mCCLtC,aACX,MAA0BO,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACf,OAAO,cAAC,IAAD,CAAUD,MAAOA,EAAOC,OAAQA,K,MCA5B,SAASC,IACpB,MAAwBC,IAAMC,SAASC,KAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BJ,IAAMC,UAAS,GAA7C,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,IAAMC,SAAS,GAAzC,mBAAOM,EAAP,KAAcC,EAAd,KAWA,SAASC,IACL,MAAO,CACHnB,MAAOoB,KAAKC,KAAqB,EAAhBD,KAAKE,UACtBxB,QAAQ,EACRyB,GAAIC,eAIZ,SAASZ,IAEL,IADA,IAAMa,EAAU,GACPC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAQE,KAAKR,KAEjB,OAAOM,EAtBXf,IAAMkB,WAAU,WACZ,IAAMC,EAAUhB,EAAKiB,OAAM,SAACC,GAAD,OAASA,EAAIjC,UAClCkC,EAAanB,EAAK,GAAGb,MACrBiC,EAAepB,EAAKiB,OAAM,SAACC,GAAD,OAASA,EAAI/B,QAAUgC,KACnDH,GAAWI,GACXjB,GAAW,KAEhB,CAACH,IAyCJ,IAAMqB,EAAerB,EAAKsB,KAAI,SAACJ,GAAD,OAC1B,cAAC,EAAD,CAEI/B,MAAO+B,EAAI/B,MACXF,OAAQiC,EAAIjC,OACZK,SAAU,kBAbAoB,EAaeQ,EAAIR,QAZjCT,GAAQ,SAACsB,GAAD,OACJA,EAAQD,KAAI,SAACJ,GACT,OAAOA,EAAIR,KAAOA,EAAX,2BAAqBQ,GAArB,IAA0BjC,QAASiC,EAAIjC,SAAWiC,QAHrE,IAAkBR,IAULQ,EAAIR,OAOjB,OACI,iCACKR,GAAW,cAACsB,EAAD,IACZ,oBAAItC,UAAU,QAAd,qBACA,mBAAGA,UAAU,eAAb,+GAIA,8BACe,IAAVkB,GACG,oBAAGlB,UAAU,eAAb,8BAA8CkB,OAGtD,qBAAKlB,UAAU,iBAAf,SAAiCmC,IACjC,wBAAQnC,UAAU,YAAYG,QA9CtC,WACIgB,GAAS,SAACoB,GAAD,OAAcA,EAAW,KAC7BvB,GAODC,GAAW,GACXF,EAAQF,KACRM,EAAS,IARTJ,GAAQ,SAACsB,GAAD,OACJA,EAAQD,KAAI,SAACJ,GACT,OAAOA,EAAIjC,OAASiC,EAAMZ,WAyClC,SACKJ,EAAU,WAAa,YC9ExCwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.512a7249.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Die.css\";\r\n\r\nexport default function Die(props) {\r\n    const styles = {\r\n        backgroundColor: props.isHeld ? \"#59E391\" : \"white\",\r\n    };\r\n    return (\r\n        <div className={`die-face face-${props.value}`} style={styles} onClick={props.holdDice}>\r\n            {Array(props.value).fill(<span className=\"dot\"></span>)}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {useWindowSize} from \"react-use\";\r\nimport Confetti from \"react-confetti\";\r\n\r\nexport default () => {\r\n    const { width, height } = useWindowSize();\r\n    return <Confetti width={width} height={height} />;\r\n};\r\n","import React from \"react\";\r\nimport Die from \"./components/Die\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Confetti from \"./components/Confetti\";\r\nimport \"./styles/App.css\";\r\n\r\nexport default function App() {\r\n    const [dice, setDice] = React.useState(allNewDice());\r\n    const [tenzies, setTenzies] = React.useState(false);\r\n    const [rolls, setRolls] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        const allHeld = dice.every((die) => die.isHeld);\r\n        const firstValue = dice[0].value;\r\n        const allSameValue = dice.every((die) => die.value === firstValue);\r\n        if (allHeld && allSameValue) {\r\n            setTenzies(true);\r\n        }\r\n    }, [dice]);\r\n\r\n    function generateNewDie() {\r\n        return {\r\n            value: Math.ceil(Math.random() * 6),\r\n            isHeld: false,\r\n            id: nanoid(),\r\n        };\r\n    }\r\n\r\n    function allNewDice() {\r\n        const newDice = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            newDice.push(generateNewDie());\r\n        }\r\n        return newDice;\r\n    }\r\n\r\n    function rollDice() {\r\n        setRolls((prevRoll) => prevRoll + 1);\r\n        if (!tenzies) {\r\n            setDice((oldDice) =>\r\n                oldDice.map((die) => {\r\n                    return die.isHeld ? die : generateNewDie();\r\n                })\r\n            );\r\n        } else {\r\n            setTenzies(false);\r\n            setDice(allNewDice());\r\n            setRolls(0);\r\n        }\r\n    }\r\n\r\n    function holdDice(id) {\r\n        setDice((oldDice) =>\r\n            oldDice.map((die) => {\r\n                return die.id === id ? { ...die, isHeld: !die.isHeld } : die;\r\n            })\r\n        );\r\n    }\r\n\r\n    const diceElements = dice.map((die) => (\r\n        <Die\r\n            key={die.id}\r\n            value={die.value}\r\n            isHeld={die.isHeld}\r\n            holdDice={() => holdDice(die.id)}\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <main>\r\n            {tenzies && <Confetti />}\r\n            <h1 className=\"title\">Tenzies</h1>\r\n            <p className=\"instructions\">\r\n                Roll until all dice are the same. Click each die to freeze it at\r\n                its current value between rolls.\r\n            </p>\r\n            <div>\r\n                {rolls !== 0 && (\r\n                    <p className=\"instructions\">Number of Rolls: {rolls}</p>\r\n                )}\r\n            </div>\r\n            <div className=\"dice-container\">{diceElements}</div>\r\n            <button className=\"roll-dice\" onClick={rollDice}>\r\n                {tenzies ? \"New Game\" : \"Roll\"}\r\n            </button>\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}